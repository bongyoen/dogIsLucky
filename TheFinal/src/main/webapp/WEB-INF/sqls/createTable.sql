--테이블 생성 alq

CREATE SEQUENCE BOOK_BEAUTY_SEQ NOCACHE ;
CREATE TABLE BOOK_BEAUTY (
  BOOK_BEAUTY_ID NUMBER primary key,
  USER_ID NUMBER NOT NULL,
  PET_ID NUMBER NOT NULL,
  BEAUTY_ID NUMBER NOT NULL
);

CREATE SEQUENCE BASKET_SEQ NOCACHE ;
CREATE TABLE BASKET (
  BASKET_ID NUMBER primary key ,
  PRODUCT_ID NUMBER NOT NULL,
  USER_ID NUMBER NOT NULL,
  QUANTITY NUMBER NOT NULL
);

CREATE SEQUENCE BEAUTY_SEQ NOCACHE ;
CREATE TABLE BEAUTY (
  BEAUTY_ID NUMBER primary key ,
  NAME VARCHAR2(200),
  PHONE VARCHAR2(255),
  ADDR1 VARCHAR2(1000),
  ADDR2 VARCHAR2(1000),
  ZIPCODE VARCHAR2(255),
  STATUS_ID NUMBER
);

CREATE SEQUENCE BEAUTY_STATUS_SEQ NOCACHE ;
CREATE TABLE BEAUTY_STATUS (
  BEAUTY_STATUS_ID NUMBER PRIMARY KEY ,
  STATUS VARCHAR2(100)
);

CREATE SEQUENCE BUY_CONFIRMED_SEQ NOCACHE ;
CREATE TABLE BUY_CONFIRMED (
  BUY_CONFIRMED_ID NUMBER PRIMARY KEY ,
  CONFIRMATION VARCHAR2(10) NOT NULL
);

CREATE SEQUENCE CANCEL_SEQ NOCACHE ;
CREATE TABLE CANCEL (
  CANCEL_ID NUMBER NOT NULL,
  ORDER_ID NUMBER NOT NULL,
  PRODUCT_ID NUMBER NOT NULL,
  USER_ID NUMBER NOT NULL,
  APPLY_DATE DATE NOT NULL,
  REASON VARCHAR2(255) NOT NULL,
  PROGRESS_ID NUMBER,
  QUANTITY VARCHAR2(255) NOT NULL,
  PRICE NUMBER NOT NULL,
  CANC_DATE DATE,
  CANC_RESULT_ID NUMBER,
  COMP_DATE DATE
);

CREATE SEQUENCE CANCELS_RES_SEQ NOCACHE ;
CREATE TABLE CANCELS_RES (
  CANCEL_RES_ID NUMBER PRIMARY KEY,
  CANCEL_RES VARCHAR2(255)
);

CREATE SEQUENCE CATEGORY_SEQ NOCACHE ;
CREATE TABLE CATEGORY (
  CATE_ID NUMBER PRIMARY KEY ,
  CATEGORY VARCHAR2(255) NOT NULL
);

CREATE SEQUENCE CHANGE_RES_SEQ NOCACHE ;
CREATE TABLE CHANGE_RES (
  CHANGE_RES_ID NUMBER PRIMARY KEY ,
  CHANG_RES VARCHAR2(255) NOT NULL
);

CREATE SEQUENCE CHANGES_SEQ NOCACHE ;
CREATE TABLE CHANGES (
  CHANGE_ID NUMBER NOT NULL,
  USER_ID NUMBER NOT NULL,
  ORDER_ID NUMBER NOT NULL,
  PRODUCT_ID NUMBER NOT NULL,
  QUANTITY NUMBER,
  REASON VARCHAR2(255) NOT NULL,
  APPLY_DATE DATE NOT NULL,
  SELLER_COMMENT VARCHAR2(255),
  PROGRESS_ID NUMBER,
  RESULT_ID NUMBER,
  COMP_DATE DATE
);

CREATE SEQUENCE CLOSED_DATE_SEQ NOCACHE ;
CREATE TABLE CLOSED_DATE (
  CLOSE_DATE_ID NUMBER PRIMARY KEY ,
  CLOSED_DATE DATE,
  VET_ID NUMBER
);

CREATE SEQUENCE DELIV_STATUS_SEQ NOCACHE ;
CREATE TABLE DELIV_STATUS (
  DELI_STATUS_ID NUMBER PRIMARY KEY ,
  DELI_STATUS VARCHAR2(255) NOT NULL
);

CREATE SEQUENCE DIAGNOSIS_SEQ NOCACHE ;
CREATE TABLE DIAGNOSIS (
  DIAGNO_ID NUMBER PRIMARY KEY ,
  VET_ID NUMBER NOT NULL,
  USER_ID NUMBER NOT NULL,
  PET_ID NUMBER NOT NULL,
  DIGONO VARCHAR2(255) NOT NULL,
  IMAGE_URL_ID NUMBER NOT NULL,
  CREATE_DATE DATE NOT NULL
);

CREATE SEQUENCE DP_STATUS_SEQ NOCACHE ;
CREATE TABLE DP_STATUS (
  DP_STATUS_ID NUMBER PRIMARY KEY ,
  DP_STATUS VARCHAR2(255) NOT NULL
);


CREATE SEQUENCE BOOK_ID_SEQ NOCACHE;
CREATE TABLE BOOKING_VET (
  BOOK_ID NUMBER PRIMARY KEY ,
  USER_ID NUMBER NOT NULL,
  PET_ID NUMBER NOT NULL,
  BOOK_DATE DATE NOT NULL,
  BOOK_TIME DATE NOT NULL ,
  VET_ID NUMBER NOT NULL ,
  COMMENTS VARCHAR2(255)
);

CREATE SEQUENCE IMAGES_URL_SEQ NOCACHE ;
CREATE TABLE IMAGES_URL (
  IMAGE_URL_ID NUMBER PRIMARY KEY ,
  IMAGE_URL VARCHAR2(255) NOT NULL
);

CREATE SEQUENCE INVOICE_SEQ NOCACHE ;
CREATE TABLE INVOICE (
  INVOICE_ID NUMBER NOT NULL UNIQUE ,
  VET_ID NUMBER NOT NULL,
  PET_ID NUMBER NOT NULL,
  USER_ID NUMBER NOT NULL,
  DIAGNOSIS NUMBER NOT NULL,
  SERVICE VARCHAR2(255) NOT NULL,
  PRICE NUMBER NOT NULL,
  INVOICE_DATE DATE NOT NULL,
  COMMENTS VARCHAR2(2000)
);

CREATE SEQUENCE INVOICE_ITEM_SEQ NOCACHE ;
CREATE TABLE INVOICE_ITEMS (
  ITEM_ID NUMBER NOT NULL,
  INVOICE_ID NUMBER NOT NULL,
  CLIENT_ID NUMBER NOT NULL,
  CREATE_DATE DATE NOT NULL,
  ITEMS VARCHAR2(255) NOT NULL,
  QUANTITY NUMBER NOT NULL,
  UNIT_PRICE NUMBER NOT NULL,
  AMOUNT VARCHAR2(255) NOT NULL,
  TAX VARCHAR2(10) NOT NULL
);

CREATE SEQUENCE LODGE_VET_SEQ NOCACHE ;
CREATE TABLE LODGE_VET (
  LODGE_ID NUMBER PRIMARY KEY ,
  USER_ID NUMBER,
  PET_ID NUMBER,
  VET_ID NUMBER
);

-- CREATE TABLE "NOTIFICATION-RECEVE" (
--   "ID" NUMBER NOT NULL,
--   "USERID" NUMBER,
--   "PETID" NUMBER,
--   "NOTIFICATION" VARCHAR2(255) NOT NULL,
--   "DATE" DATE NOT NULL,
--   "RESERV-ID" NUMBER,
--   "VET-ID" NUMBER,
--   "CHECK" VARCHAR2(255) NOT NULL,
--   "TYPE" NUMBER NOT NULL,
--   CONSTRAINT "_COPY_11" PRIMARY KEY ("ID")
-- );

-- CREATE TABLE "NOTIFICATION-SEND" (
--   "ID" NUMBER NOT NULL,
--   "USERID" NUMBER,
--   "PETID" NUMBER,
--   "NOTIFICATION" VARCHAR2(255) NOT NULL,
--   "DATE" DATE NOT NULL,
--   "RESERV-ID" NUMBER,
--   "VET-ID" NUMBER,
--   "CHECK" VARCHAR2(255) NOT NULL,
--   "TYPE" NUMBER NOT NULL,
--   CONSTRAINT "_COPY_11_COPY_1" PRIMARY KEY ("ID")
-- );

CREATE SEQUENCE OPTIONS_SEQ NOCACHE ;
CREATE TABLE OPTIONS (
  OPTIONS_ID NUMBER PRIMARY KEY ,
  OPTIONS VARCHAR2(255) NOT NULL
);

CREATE SEQUENCE ORDER_TYPE_SEQ NOCACHE ;
CREATE TABLE ORDER_TYPE (
  ORDER_TYPE_ID NUMBER PRIMARY KEY ,
  TYPE VARCHAR2(255) NOT NULL
);

CREATE SEQUENCE ORDERS_SEQ NOCACHE ;
CREATE TABLE "ORDERS" (
  ORDER_ID NUMBER NOT NULL UNIQUE ,
  USER_ID NUMBER NOT NULL,
  PRODUCT_ID NUMBER NOT NULL,
  QUANTITY NUMBER NOT NULL,
  TOTAL_PRICE NUMBER NOT NULL,
  ORDER_DATE DATE NOT NULL,
  SUPPLIERS_ID NUMBER NOT NULL,
  DELIVERY_STATUS_ID NUMBER,
  BUY_CONFIRM_ID NUMBER,
  ORDER_TYPE_ID NUMBER NOT NULL,
  CONFIRMED_DATE DATE,
  SELLER_COMMENT VARCHAR2(255)
);

CREATE SEQUENCE PAY_HISTORY_SEQ NOCACHE ;
CREATE TABLE PAY_HISTORY (
  PAY_HISTORY_ID NUMBER PRIMARY KEY ,
  IMP_UID VARCHAR2(255) NOT NULL,
  PAY_METHOD VARCHAR2(255) NOT NULL,
  PAID_AMOUNT NUMBER NOT NULL,
  STATUS VARCHAR2(255) NOT NULL,
  NAME VARCHAR2(255) NOT NULL,
  BUYER_NAME VARCHAR2(255) NOT NULL,
  BUYER_ADDR VARCHAR2(255) NOT NULL,
  BUYER_POSTCODE VARCHAR2(255) NOT NULL,
  PAID_AT DATE NOT NULL,
  USER_ID NUMBER NOT NULL,
  VET_ID NUMBER NOT NULL
);

CREATE SEQUENCE PAY_METHOD_SEQ NOCACHE ;
CREATE TABLE PAY_METHOD (
  PAY_METHOD_ID NUMBER PRIMARY KEY ,
  METHOD VARCHAR2(255) NOT NULL
);

CREATE SEQUENCE PAYMENT_SEQ NOCACHE ;
CREATE TABLE PAYMENT (
  PAYMENT_ID NUMBER PRIMARY KEY ,
  USER_ID NUMBER NOT NULL,
  INVOICE_ID NUMBER NOT NULL,
  METHOD_ID NUMBER NOT NULL
);

CREATE SEQUENCE PET_SEQ NOCACHE ;
CREATE TABLE "PET" (
  PET_ID NUMBER PRIMARY KEY ,
  OWNER_ID NUMBER NOT NULL,
  PET_NAME VARCHAR2(255) NOT NULL,
  SPECIES VARCHAR2(255) NOT NULL,
  AGE NUMBER NOT NULL,
  WEIGHT NUMBER NOT NULL,
  IMAGE_ID NUMBER
);

CREATE SEQUENCE PRODUCTS_SEQ NOCACHE ;
CREATE TABLE "PRODUCTS" (
  PRODUCT_ID NUMBER PRIMARY KEY ,
  CATEGORY_ID NUMBER NOT NULL,
  NAME VARCHAR2(255) NOT NULL,
  SALES_PRICE NUMBER NOT NULL,
  ORIGIN_PRICE NUMBER NOT NULL,
  SUPPLIER VARCHAR2(255) NOT NULL,
  STOCK NUMBER,
  DESCRIPTION VARCHAR2(255) NOT NULL,
  RATE VARCHAR2(255) NOT NULL,
  SALES_STATUS NUMBER NOT NULL,
  DP_STATUS_ID NUMBER,
  OPTION_ID NUMBER,
  USAGE_DATE NUMBER,
  IMAGE_URL1_ID1 NUMBER NOT NULL,
  IMAGE_URL2_ID2 NUMBER,
  IMAGE_URL3_ID3 NUMBER
);

CREATE SEQUENCE PROGRESS_SEQ NOCACHE ;
CREATE TABLE PROGRESS (
  PROGRESS_ID NUMBER PRIMARY KEY ,
  PROGRESS VARCHAR2(255) NOT NULL
);

CREATE SEQUENCE QA_SEQ NOCACHE ;
CREATE TABLE QA (
  QA_ID NUMBER PRIMARY KEY ,
  USER_ID NUMBER NOT NULL,
  QUESTION VARCHAR2(255) NOT NULL,
  Q_DATE DATE NOT NULL,
  SELLER_ID NUMBER,
  ANSWER VARCHAR2(255),
  A_DATE DATE
);

CREATE SEQUENCE REFUND_RES_SEQ NOCACHE ;
CREATE TABLE REFUND_RES (
  REFUND_RES_ID NUMBER PRIMARY KEY ,
  REFUND_RES VARCHAR2(255) NOT NULL
);


CREATE SEQUENCE REFUND_SEQ NOCACHE ;
CREATE TABLE REFUND (
  REFUND_ID NUMBER NOT NULL,
  ORDER_ID NUMBER NOT NULL,
  PRODUCT_ID NUMBER NOT NULL,
  AMOUNT NUMBER NOT NULL,
  REASON VARCHAR2(255) NOT NULL,
  APPLY_DATE DATE NOT NULL,
  SELLER_COMMENT VARCHAR2(255),
  PROGRESS_ID NUMBER,
  RESULT_ID NUMBER,
  COMP_DATE DATE
);

CREATE SEQUENCE BOOK_TIME_CLASS_SEQ NOCACHE ;
CREATE TABLE BOOK_TIME_CLASS (
  TIME_CLASS_ID NUMBER PRIMARY KEY ,
  AVAILABLE_TIME DATE
);

CREATE SEQUENCE REVIEW_SEQ NOCACHE ;
CREATE TABLE REVIEW (
  REVIEW_ID NUMBER PRIMARY KEY ,
  PRODUCT_ID NUMBER NOT NULL,
  USER_ID NUMBER NOT NULL,
  COMMENTS VARCHAR2(255) NOT NULL,
  RATE NUMBER,
  IMAGE_ID NUMBER,
  REG_DATE DATE NOT NULL
);

CREATE SEQUENCE SALES_STATUS_SEQ NOCACHE ;
CREATE TABLE SALES_STATUS (
  SA_STATUS_ID NUMBER PRIMARY KEY ,
  SA_STATUS VARCHAR2(255) NOT NULL
);

CREATE SEQUENCE USAGE_DAYS_SEQ NOCACHE ;
CREATE TABLE USAGE_DAYS (
  USAGE_DAYS_ID NUMBER PRIMARY KEY ,
  USAGE_DAYS NUMBER
);

CREATE SEQUENCE SUBSCRIBED_ITEM_SEQ NOCACHE ;
CREATE TABLE SUBSCRIBED_ITEM (
  SUBSCRIBED_ID NUMBER PRIMARY KEY ,
  USER_ID NUMBER NOT NULL,
  PRODUCT_ID NUMBER NOT NULL,
  ORDER_DATE DATE NOT NULL
);


CREATE SEQUENCE SUGGEST_SEQ NOCACHE ;
CREATE TABLE SUGGEST (
  SUGGEST_ID NUMBER NOT NULL PRIMARY KEY ,
  TREATMENT VARCHAR2(255)
);

CREATE SEQUENCE USER_SEQ NOCACHE ;
CREATE TABLE USERS (
  USER_ID NUMBER PRIMARY KEY ,
  USERNAME VARCHAR2(255) NOT NULL,
  USERPW VARCHAR2(255) NOT NULL,
  PHONE VARCHAR2(255) NOT NULL,
  ADDR VARCHAR2(255) NOT NULL,
  EMAIL VARCHAR2(255) NOT NULL,
  USER_CLASS_ID NUMBER NOT NULL,
  GENDER VARCHAR2(10) NOT NULL,
  AGE NUMBER NOT NULL,
  BIZ_NO NUMBER,
  BIZ_EMAIL VARCHAR2(255)
);

CREATE SEQUENCE USER_CLASS_SEQ NOCACHE ;
CREATE TABLE USER_CLASS (
  USER_CLASS_ID NUMBER NOT NULL PRIMARY KEY ,
  USER_CLASS VARCHAR2(255) NOT NULL
);

CREATE SEQUENCE VET_SEQ NOCACHE ;
CREATE TABLE VET (
  VET_ID NUMBER NOT NULL PRIMARY KEY ,
  STATUS_ID NUMBER NOT NULL,
  VET_NAME VARCHAR2(255) NOT NULL,
  VET_PHONE VARCHAR2(255) NOT NULL,
  ADDR1 VARCHAR2(255) NOT NULL,
  ADDR2 VARCHAR2(255) NOT NULL,
  ZIPCODE VARCHAR2(255) NOT NULL
);

CREATE SEQUENCE VET_STATUS_SEQ NOCACHE ;
CREATE TABLE VET_STATUS (
  VET_STATUS_ID NUMBER NOT NULL PRIMARY KEY ,
  STATES VARCHAR2(255) NOT NULL
);

ALTER TABLE BOOK_BEAUTY ADD CONSTRAINT "USER_COPY_3" FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);
ALTER TABLE BOOK_BEAUTY ADD CONSTRAINT "PET_COPY_4" FOREIGN KEY (PET_ID) REFERENCES PET (PET_ID);
ALTER TABLE BOOK_BEAUTY ADD CONSTRAINT "BEAUTY" FOREIGN KEY (BEAUTY_ID) REFERENCES BEAUTY (BEAUTY_ID);
ALTER TABLE BASKET ADD CONSTRAINT "USERID" FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);
ALTER TABLE BASKET ADD CONSTRAINT "PRODUCTS" FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS (PRODUCT_ID);
ALTER TABLE BEAUTY ADD CONSTRAINT "BEAUTY-ID" FOREIGN KEY (STATUS_ID) REFERENCES BEAUTY_STATUS (BEAUTY_STATUS_ID);
ALTER TABLE CLOSED_DATE ADD CONSTRAINT "VET-ID_COPY_4" FOREIGN KEY (VET_ID) REFERENCES VET (VET_ID);
ALTER TABLE DIAGNOSIS ADD CONSTRAINT "USER-ID_COPY_3" FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);
ALTER TABLE DIAGNOSIS ADD CONSTRAINT "PET-ID" FOREIGN KEY (PET_ID) REFERENCES PET (PET_ID);
ALTER TABLE DIAGNOSIS ADD CONSTRAINT "VET-ID_COPY_1" FOREIGN KEY (VET_ID) REFERENCES VET (VET_ID);
ALTER TABLE DIAGNOSIS ADD CONSTRAINT "IMAGES_COPY_1" FOREIGN KEY (IMAGE_URL_ID) REFERENCES IMAGES_URL (IMAGE_URL_ID);
ALTER TABLE INVOICE ADD CONSTRAINT "PETID" FOREIGN KEY (PET_ID) REFERENCES PET (PET_ID);
ALTER TABLE INVOICE ADD CONSTRAINT "USERID_COPY_2" FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);
ALTER TABLE INVOICE ADD CONSTRAINT "DIGONOSIS" FOREIGN KEY (DIAGNOSIS) REFERENCES DIAGNOSIS (DIAGNO_ID);
ALTER TABLE INVOICE ADD CONSTRAINT "VET-ID" FOREIGN KEY (VET_ID) REFERENCES VET (VET_ID);
ALTER TABLE LODGE_VET ADD CONSTRAINT "USER" FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);
ALTER TABLE LODGE_VET ADD CONSTRAINT "PET" FOREIGN KEY (PET_ID) REFERENCES PET (PET_ID);
ALTER TABLE LODGE_VET ADD CONSTRAINT "VET" FOREIGN KEY (VET_ID) REFERENCES VET (VET_ID);
ALTER TABLE PAY_HISTORY ADD CONSTRAINT "USERID_COPY_1" FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);
ALTER TABLE PAY_HISTORY ADD CONSTRAINT "PET_COPY_2" FOREIGN KEY (VET_ID) REFERENCES VET (VET_ID);
ALTER TABLE PET ADD CONSTRAINT "OWNER" FOREIGN KEY (OWNER_ID) REFERENCES USERS (USER_ID);
ALTER TABLE PET ADD CONSTRAINT "IMAGE-ID" FOREIGN KEY (IMAGE_ID) REFERENCES IMAGES_URL (IMAGE_URL_ID);
ALTER TABLE PRODUCTS ADD CONSTRAINT "CATEGORY" FOREIGN KEY (CATEGORY_ID) REFERENCES CATEGORY (CATE_ID);
ALTER TABLE QA ADD CONSTRAINT "USER-ID" FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);
ALTER TABLE QA ADD CONSTRAINT "SUPPLIER-ID" FOREIGN KEY (SELLER_ID) REFERENCES USERS (USER_ID);
ALTER TABLE REVIEW ADD CONSTRAINT "PRODUCT_COPY_3" FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS (PRODUCT_ID);
ALTER TABLE REVIEW ADD CONSTRAINT "USER_COPY_6" FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);
ALTER TABLE REVIEW ADD CONSTRAINT "IMAGES" FOREIGN KEY (IMAGE_ID) REFERENCES IMAGES_URL (IMAGE_URL_ID);
ALTER TABLE SUBSCRIBED_ITEM ADD CONSTRAINT "USER_COPY_7" FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);
ALTER TABLE SUBSCRIBED_ITEM ADD CONSTRAINT "PRODUCT" FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS (PRODUCT_ID);
ALTER TABLE ORDERS ADD CONSTRAINT "USER_COPY_5" FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);
ALTER TABLE ORDERS ADD CONSTRAINT "PRODUCT_COPY_2" FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS (PRODUCT_ID);
ALTER TABLE ORDERS ADD CONSTRAINT "DELIVERY" FOREIGN KEY (DELIVERY_STATUS_ID) REFERENCES DELIV_STATUS (DELI_STATUS_ID);
ALTER TABLE ORDERS ADD CONSTRAINT "CONFIMATION" FOREIGN KEY (BUY_CONFIRM_ID) REFERENCES BUY_CONFIRMED (BUY_CONFIRMED_ID);
ALTER TABLE ORDERS ADD CONSTRAINT "ORDERTYPE" FOREIGN KEY (ORDER_TYPE_ID) REFERENCES ORDER_TYPE (ORDER_TYPE_ID);
ALTER TABLE USERS ADD CONSTRAINT "USER-CLASS" FOREIGN KEY (USER_CLASS_ID) REFERENCES USER_CLASS (USER_CLASS_ID);
ALTER TABLE VET ADD CONSTRAINT "STATUS-ID" FOREIGN KEY (STATUS_ID) REFERENCES VET_STATUS (VET_STATUS_ID);
ALTER TABLE CHANGES ADD CONSTRAINT "USER_COPY_4" FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);
ALTER TABLE CHANGES ADD CONSTRAINT "PRODUCT_COPY_1" FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS (PRODUCT_ID);
ALTER TABLE CHANGES ADD CONSTRAINT "CHANGES-RESULT" FOREIGN KEY (RESULT_ID) REFERENCES CHANGE_RES (CHANGE_RES_ID);
ALTER TABLE CHANGES ADD CONSTRAINT "PROGRESS-ID" FOREIGN KEY (PROGRESS_ID) REFERENCES PROGRESS (PROGRESS_ID);
ALTER TABLE BOOKING_VET ADD CONSTRAINT "USER_COPY_1" FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);
ALTER TABLE BOOKING_VET ADD CONSTRAINT "PET_COPY_3" FOREIGN KEY (PET_ID) REFERENCES PET (PET_ID);
ALTER TABLE BOOKING_VET ADD CONSTRAINT "VET-INFO" FOREIGN KEY (VET_ID) REFERENCES VET (VET_ID);
ALTER TABLE INVOICE_ITEMS ADD CONSTRAINT "CLIENTID" FOREIGN KEY (CLIENT_ID) REFERENCES USERS (USER_ID);
ALTER TABLE PAYMENT ADD CONSTRAINT "METHOD-ID" FOREIGN KEY (METHOD_ID) REFERENCES PAY_METHOD (PAY_METHOD_ID);
ALTER TABLE PRODUCTS ADD CONSTRAINT "IMAGES1" FOREIGN KEY (IMAGE_URL1_ID1) REFERENCES IMAGES_URL (IMAGE_URL_ID);
ALTER TABLE PRODUCTS ADD CONSTRAINT "OPTIONS" FOREIGN KEY (OPTION_ID) REFERENCES OPTIONS (OPTIONS_ID);
ALTER TABLE PRODUCTS ADD CONSTRAINT "STATUS" FOREIGN KEY (SALES_STATUS) REFERENCES SALES_STATUS (SA_STATUS_ID);
ALTER TABLE PRODUCTS ADD CONSTRAINT "DP=STATUS" FOREIGN KEY (DP_STATUS_ID) REFERENCES DP_STATUS (DP_STATUS_ID);
ALTER TABLE PRODUCTS ADD CONSTRAINT "IMAGES2" FOREIGN KEY (IMAGE_URL2_ID2) REFERENCES IMAGES_URL (IMAGE_URL_ID);
ALTER TABLE PRODUCTS ADD CONSTRAINT "IMAGES3" FOREIGN KEY (IMAGE_URL3_ID3) REFERENCES IMAGES_URL(IMAGE_URL_ID);
ALTER TABLE REFUND ADD CONSTRAINT "REFUND-RESULT" FOREIGN KEY (RESULT_ID) REFERENCES REFUND_RES (REFUND_RES_ID);
ALTER TABLE CANCEL ADD CONSTRAINT "PROGRESS" FOREIGN KEY (PROGRESS_ID) REFERENCES PROGRESS (PROGRESS_ID);
ALTER TABLE CANCEL ADD CONSTRAINT "CANCEL-RESULT" FOREIGN KEY (CANC_RESULT_ID) REFERENCES CANCELS_RES (CANCEL_RES_ID);
ALTER TABLE CANCEL ADD CONSTRAINT CANCEL_PRI PRIMARY KEY (CANCEL_ID, ORDER_ID, PRODUCT_ID);
ALTER TABLE PAYMENT ADD CONSTRAINT "USER_COPY_2" FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);
ALTER TABLE REFUND ADD CONSTRAINT "PROGRESS-STATUS" FOREIGN KEY (PROGRESS_ID) REFERENCES PROGRESS (PROGRESS_ID);
ALTER TABLE CANCEL ADD CONSTRAINT "PRODUCT_INFO" FOREIGN KEY (PRODUCT_ID) REFERENCES PRODUCTS (PRODUCT_ID);
ALTER TABLE CANCEL ADD CONSTRAINT "USER-INFO" FOREIGN KEY (USER_ID) REFERENCES USERS (USER_ID);
ALTER TABLE INVOICE_ITEMS ADD CONSTRAINT "INVOICEID" FOREIGN KEY (INVOICE_ID) REFERENCES INVOICE (INVOICE_ID);
ALTER TABLE CHANGES ADD CONSTRAINT "ORDER-ID" FOREIGN KEY (ORDER_ID) REFERENCES ORDERS (ORDER_ID);
ALTER TABLE PAYMENT ADD CONSTRAINT "INVOICE-ID" FOREIGN KEY (INVOICE_ID) REFERENCES INVOICE (INVOICE_ID);
-- ALTER TABLE PRODUCTS ADD CONSTRAINT "RATE" FOREIGN KEY ("RATE") REFERENCES REVIEW (REVIEW_ID);
ALTER TABLE REFUND ADD CONSTRAINT "REFUND_ORDER_INFO" FOREIGN KEY (ORDER_ID) REFERENCES ORDERS (ORDER_ID);
ALTER TABLE CANCEL ADD CONSTRAINT "CANCEL_ORDER-INFO" FOREIGN KEY (ORDER_ID) REFERENCES ORDERS (ORDER_ID);

ALTER TABLE INVOICE_ITEMS ADD CONSTRAINT INVOICE_ITEMS_PRI PRIMARY KEY (ITEM_ID, INVOICE_ID, CLIENT_ID);
ALTER TABLE ORDERS ADD CONSTRAINT ORDERS_PRI PRIMARY KEY (ORDER_ID, PRODUCT_ID, USER_ID);
ALTER TABLE INVOICE ADD CONSTRAINT INVOICE_PRI PRIMARY KEY (INVOICE_ID, PET_ID, VET_ID);
ALTER TABLE CHANGES ADD CONSTRAINT CHANGES_PRI PRIMARY KEY (CHANGE_ID, ORDER_ID, PRODUCT_ID);
ALTER TABLE REFUND ADD CONSTRAINT REFUND_PRI PRIMARY KEY (REFUND_ID, ORDER_ID, PRODUCT_ID);